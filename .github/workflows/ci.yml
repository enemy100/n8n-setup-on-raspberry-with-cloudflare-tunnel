name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check Markdown syntax
      run: |
        echo "Checking Markdown files..."
        # Instalar markdownlint se necessário
        # npm install -g markdownlint-cli
        # markdownlint *.md
        
    - name: Validate Python syntax
      run: |
        echo "Creating temporary app.py for syntax validation..."
        mkdir -p test_dashboard
        # Extrair código Python do SETUP_GUIDE.md para validar
        awk '/```python$/,/```$/{if (!/```python$|^```$/){print}}' SETUP_GUIDE.md > test_dashboard/app.py || true
        if [ -s test_dashboard/app.py ]; then
          python3 -m py_compile test_dashboard/app.py
          echo "✓ Python syntax valid"
        fi
        
    - name: Validate HTML
      run: |
        echo "Checking HTML files..."
        # Extrair HTML do SETUP_GUIDE.md
        awk '/```html$/,/```$/{if (!/```html$|^```$/){print}}' SETUP_GUIDE.md > test_dashboard/index.html || true
        if [ -s test_dashboard/index.html ]; then
          echo "✓ HTML file extracted"
        fi

  build-demo:
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Extract and save dashboard files
      run: |
        mkdir -p artifacts/dashboard
        
        # Extrair e salvar app.py
        echo "Extracting app.py from documentation..."
        awk '/```python$/,/```$/{if (!/```python$|^```$/){print}}' SETUP_GUIDE.md > artifacts/dashboard/app.py || true
        
        # Extrair e salvar index.html
        echo "Extracting index.html from documentation..."
        awk '/```html$/,/```$/{if (!/```html$|^```$/){print}}' SETUP_GUIDE.md > artifacts/dashboard/index.html || true
        
        echo "Saved files:"
        ls -lh artifacts/dashboard/
        
    - name: Create artifacts
      run: |
        cd artifacts
        tar -czf dashboard.tar.gz dashboard/
        echo "Created dashboard.tar.gz"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dashboard-files
        path: artifacts/dashboard.tar.gz

